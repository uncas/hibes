- Repository
    ProjectRepository
        IList<Project> GetProjects()
        ProjectEvaluation GetProjectEvaluation(int? projectId, int? maxPriority)
    IssueRepository
        IList<Issue> GetIssues(int? projectId, Status status)
        IssueView GetIssueView(int issueId, Status taskStatus)
        InsertIssue(Issue)
        UpdateIssue(Issue)
        DeleteIssue(int issueId)
        [ private Issue GetIssue(int issueId) ]
    TaskRepository
        InsertTask(Task)
        UpdateTask(Task)
        DeleteTask(int taskId)
        [ internal IList<Task> GetTasks(int issueId, Status status) ]
    PersonOffRepository
        GetPersonOffs()
            -> returns future PersonOffs, i.e. ToDate >= DateTime.Now
        InsertPersonOff(PersonOff personOff)
        DeletePersonOff(int personOffId)
        UpdatePersonOff(PersonOff personOff)
- ViewModel
    IssueDetails : Issue
        NumberOfTasks
    IssueView
        Issue
        IList<Tasks>
    ProjectEvaluation
        Statistic<double> Statistics
        IList<IssueEvaluation>
    IssueEvaluation
        Issue
        double Average
    Statistic<T>
        Average
        Deviation
        IList<IntervalProbability> ProbabilityDistribution
    IntervalProbability
        Lower
        Upper
        Probability
- Model
    Issue
        int? IssueId
        DateTime CreatedDate
        string ProjectName
        string Title
        int Priority
        Status Status
    Task
        int? TaskId
        DateTime CreatedDate
        int RefIssueId
        int Sequence
        string Description
        Status Status
        decimal OriginalEstimate
        decimal CurrentEstimate
        decimal Elapsed
        DateTime StartDate
        DateTime EndDate
    Status
        Open
        Closed
    PersonOff
        FromDate
        ToDate