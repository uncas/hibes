Features
--------
- Handle multiple persons:
    - UI:
        - Person choice on task.
        - On estimate page:
            Confidence intervals per person
            List of possible completion dates for each person
        - Person offs per person.
            PersonSetup.aspx?Person=xxx
            GetPersonOffs(+ personId)
            InsertPersonOff(..., + refPersonId)
        - Texts

    - AppService:
        ProjectService
            GetProjectEvaluation
                1) Get all tasks
                2) Run simulations with all tasks for all persons.
                    Output: ProjectEvaluation
                3) Run simulations with tasks per person.
                    Output: ProjectEvaluation + PersonEstimate
                4) Collect and return all simulation results.

    - Estimation engine:
        - When estimating task: Use random speed for person in question.
        - Total estimate: One simulation with all tasks.
        - Per person estimate: Simulation with tasks per person.

    - Repository:
        + PersonRepository
            GetPersons()

    - ViewModel:
        + TaskView : Task
            PersonName
        + PersonView : Person
            IList<PersonOff> PersonOffs
        ProjectEvaluation
            Get hours per day from Person object
            Compare to PersonOffs from Person object
        + PersonConfidenceDates
            PersonName
             5 %
            50 %
            95 %

    - Model:
        + Person
            PersonId
            PersonName
            DaysPerWeek
            HoursPerDay
        PersonOff
            + RefPersonId
        Task
            + RefPersonId

    - Database:
        + Person
            PersonId
            PersonName
            DaysPerWeek
            HoursPerDay
        PersonOff
            + RefPersonId
        Task
            + RefPersonId


Architecture
------------

- Repository
    ProjectRepository
        IList<Project> GetProjects()
        ProjectEvaluation GetProjectEvaluation(int? projectId, int? maxPriority)
    IssueRepository
        IList<Issue> GetIssues(int? projectId, Status status)
        IssueView GetIssueView(int issueId, Status taskStatus)
        InsertIssue(Issue)
        UpdateIssue(Issue)
        DeleteIssue(int issueId)
        [ private Issue GetIssue(int issueId) ]
    TaskRepository
        InsertTask(Task)
        UpdateTask(Task)
        DeleteTask(int taskId)
        [ internal IList<Task> GetTasks(int issueId, Status status) ]
    PersonOffRepository
        GetPersonOffs()
            -> returns future PersonOffs, i.e. ToDate >= DateTime.Now
        InsertPersonOff(PersonOff personOff)
        DeletePersonOff(int personOffId)
        UpdatePersonOff(PersonOff personOff)
- ViewModel
    IssueDetails : Issue
        NumberOfTasks
    IssueView
        Issue
        IList<Tasks>
    ProjectEvaluation
        Statistic<double> Statistics
        IList<IssueEvaluation>
    IssueEvaluation
        Issue
        double Average
    Statistic<T>
        Average
        Deviation
        IList<IntervalProbability> ProbabilityDistribution
    IntervalProbability
        Lower
        Upper
        Probability
- Model
    Issue
        int? IssueId
        DateTime CreatedDate
        string ProjectName
        string Title
        int Priority
        Status Status
    Task
        int? TaskId
        DateTime CreatedDate
        int RefIssueId
        int Sequence
        string Description
        Status Status
        decimal OriginalEstimate
        decimal CurrentEstimate
        decimal Elapsed
        DateTime StartDate
        DateTime EndDate
    Status
        Open
        Closed
    PersonOff
        FromDate
        ToDate